BASE_IMAGE = 'srv6-calico-vpp-base'
CLUSTER_NAME = 'srv6-calico-vpp-tests'
NODE = 1
NODE_CPUS = 2
NODE_MEMORY_SIZE_GB = 2
DISK_SIZE_GB = 80
NODE_NODESET = ''
NODE_NIC_PASSTHROUGH = ''
NODE_IP = '192.168.2.2'
NODE_IP6 = 'fd02::1000'
DATA_IF_MTU = '1380'
POD_NW_CIDR = '172.16.0.0/16'
SERVICE_CIDR = '10.96.0.0/12'
KUBETOKEN = 'xvyy6d.6iw5i2ivk55xsklv'
WORKER_NODE_NAME = "worker#{NODE}"

Vagrant.configure('2') do |config|
    config.vm.box = BASE_IMAGE
    config.vm.box_check_update = false

    config.vm.boot_timeout = 900

    config.vm.provider :libvirt do |l|
        l.default_prefix = CLUSTER_NAME + '_'
        l.cpus = NODE_CPUS
        l.cputopology :sockets => '1', :cores => NODE_CPUS, :threads => '1'
        l.memory = NODE_MEMORY_SIZE_GB * 1024
        l.machine_virtual_size = DISK_SIZE_GB

        if NODE_NIC_PASSTHROUGH != ''
            l.pci parse_pci NODE_NIC_PASSTHROUGH
        end
        if NODE_NODESET != ''
            l.nodeset = NODE_NODESET
        end
    end

    config.vm.define "#{WORKER_NODE_NAME}" do |subconfig|
        subconfig.vm.hostname = "#{WORKER_NODE_NAME}"
        if NODE_NIC_PASSTHROUGH == ''
            subconfig.vm.network :private_network,
                :ip => NODE_IP,
                :libvirt__guest_ipv6 => "yes",
                :libvirt__ipv6_address => NODE_IP6,
                :libvirt__ipv6_prefix => "64"
        end
        
        # Provision
        subconfig.vm.provision "shell" do |s|
            s.path = "vagrant/scripts/linux/prepare.sh"
            s.args = ["#{DATA_IF_MTU}", "#{NODE_IP}" , "#{NODE_IP6}"]
        end

    end
end